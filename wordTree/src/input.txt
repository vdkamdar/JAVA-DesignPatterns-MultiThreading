vidhikamdar
One morning, when Gregor Samsa woke from troubled dreams, he found
himself transformed in his bed into a horrible vermin. He lay on
his armour-like back, and if he lifted his head a little he could
see his brown belly, slightly domed and divided by arches into stiff
sections. The bedding was hardly able to cover it and seemed ready
to slide off any moment. His many legs, pitifully thin compared
with the size of the rest of him, waved about helplessly as he
looked. - Kafka.

Improving the design:

The solutions in Design Patterns are organized around the question “What will change as this
program evolves?” This is usually the most important question that you can ask about any
design. If you can build your system around the answer, the results will be two-pronged:
not only will your system allow easy (and inexpensive) maintenance, but you might also
produce components that are reusable, so that other systems can be built more cheaply. This
is the promise of object-oriented programming, but it doesn’t happen automatically; it
requires thought and insight on your part. In this section we’ll see how this process can
happen during the refinement of a system.

The answer to the question “What will change?” for the recycling system is a common one:
more types will be added to the system. The goal of the design, then, is to make this addition
of types as painless as possible. In the recycling program, we’d like to encapsulate all places
where specific type information is mentioned, so (if for no other reason) any changes can be
localized to those encapsulations. It turns out that this process also cleans up the rest of the
code considerably - Bruce Eckel.

Each bound the other’s crucifix,
We gave no other bond.
Sufficient troth that we shall rise—
Deposed, at length, the grave—
To that new marriage, justified
Through Calvaries of Love - Emily Dickinson.

Before doing anything, you have to decide the fields in which you want to work. It is
very important because you cannot work well in just any field. You should choose the
fields in which you can show them good work. So first you have to explore the fields
in which you can work. You can do this by looking at the profiles of the faculty
members of your department at IITR or any institute. Then choose the fields, they
can obviously be more than one.

First choose a country, then search for universities, institutes, research labs using
google or numerous websites available. Then you have to search for people working
in the fields in which you want to work through the websites of the institutes.
You can go to the pages of the particular department and then find the contact of
persons working in those fields. 

Sometimes there are problems in finding the contacts, in that case, you can try for
'sitemap' tab on the homepage of the institute. (Most of the homepages have this).
There also you can find the links for 'Professors' or 'faculty' or 'departments'..... etc.
actually this gives all the contents of the websites.
For non English websites, generally they have link to turn the page in English. This
link you will find somewhere on the homepage. But sometimes, some internal pages
are not available in English.

Her own philosophy had early taught her that All was in All:
there were no degrees in anything. Accordingly nothing was
mean or trivial, and her “fainting robin” became a synonym of
the universe. She saw in absolute terms which gave her poetry
an accuracy like that obtained under the microscope of mod-
ern science. But her soul dominated, and when her footsteps
wavered her terms were still dictated by her unquenchable spirit.
Hers too were spirit terms with life and friends, in which respect 
she was of a divergence from the usual not easily to be
condoned. It was precisely the clamor of the commonplace
exasperated by the austerities of a reserved individuality, that
provoked her immortal exclamation - Poems of Emily Dickinson.

SUCCESS is counted sweetest
By those who ne’er succeed.
To comprehend a nectar
Requires sorest need.

Not one of all the purple host
Who took the flag to-day
Can tell the definition,
So clear, of victory,

As he, defeated, dying,
On whose forbidden ear
The distant strains of triumph
Break, agonized and clear.

Liskov Substitution Principle It is important that inheriting 
classes respect the Liskov Substitution Principle; 
this states that it must be possible to substitute a derived object (of an inheriting
class) instead of a base object without breaking the software. For example, see below, we want
to be able to substitute a Student object (or a Lecturer object) for a Person object and the
software should still work. One everyday language way of expressing this is that a Student is a
Person. Is a is always a good thought test to run when you are thinking of using inheritance.

'You are very right, Comrade Jackson. I am the victim of Fate. Ah, so
you put the little chaps in there, do you?' he said, as Mike, reaching 
the post-office, began to bundle the letters into the box. 'You seem to
have grasped your duties with admirable promptitude. It is the same
with me. I fancy we are both born men of Commerce. In a few years we
shall be pinching Comrade Bickersdyke's job. And talking of Comrade B.
brings me back to my painful story. But I shall never have time to tell
it to you during our walk back. Let us drift aside into this tea-shop.
We can order a buckwheat cake or a butter-nut, or something equally
succulent, and carefully refraining from consuming these dainties, I
will tell you all.' - Psmith in the City by P G Woodhouse.

Skipping the Staging Area

Although it can be amazingly useful for crafting commits exactly how you want
them, the staging area is sometimes a bit more complex than you need in your
workflow. If you want to skip the staging area, Git provides a simple shortcut.
Adding the -a option to the git commit command makes Git automatically
stage every file that is already tracked before doing the commit, letting you skip
the git add part - Git Documentation.

They hurried through the garden and back into the house.
Mr. Weasley was slumped in a kitchen chair with his glasses off
and his eyes closed. He was a thin man, going bald, but the little
hair he had was as red as any of his children’s. He was wearing long
green robes, which were dusty and travel-worn. - Harry Potter and the chamber of Secrets. 

All of the red-black tree algorithms that have been proposed are characterized by a worst-case
search time bounded by a small constant multiple of lg N in a tree of N keys, and the behavior ob-
served in practice is typically that same multiple faster than the worst-case bound, close the to op-
timal lg N nodes examined that would be observed in a perfectly balanced tree. This performance
is also conjectured (but not yet proved) for trees built from random keys, for all the major variants
of red-black trees. Can we analyze average-case performance with random keys for this new, sim-
pler version? This paper describes experimental results that shed light on the fascinating dynamic
behavior of the growth of these trees. - Learning Red Black Trees by Robert Sedgewick.

I T makes no difference abroad,
The seasons fit the same,
The mornings blossom into noons,
And split their pods of flame.

Wild-flowers kindle in the woods,
The brooks brag all the day;
No blackbird bates his jargoning
For passing Calvary.

Auto da fe and judgment
Are nothing to the bee;
His separation from his rose
To him seems misery.
